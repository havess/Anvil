The following is a layout for my CS488 project:

- Low poly (maybe not) scene imitating the magicians season 4 finale
- Main tech:
	- Real time 3D editor
	- Raytracer

[ ] Real time 3D editor:
	[ ] UE4 look, infinte glossy white plane with global illumination (I assume)
	[ ] Object handles
	[ ] camera object
		[ ] Configurable camera that has a lens characteristics (24mm)
		[ ] Animatable
	[ ] .obj importing
	[ ] ImGui interface
	[ ] Displacent Map fracture
		- Could just use a tree like fracturing
	[ ] "Repair fracture" operation. Follow shortest path to root of tree
	  and adjusting speed so all paths meet at the same time. Simply change
	  the end point for each branch in the fracture tree to be the current
	  "fixed" point.
	[ ] Particle system
		[ ] Emit particles from a source, allow definition of how many, exit
		  velocity and direction.
		[ ] Define a rough "guide path", allow functor to evaluate next step
		  for each particle. For this use case adjust to the line path by
		  some inverse polynomial amount but leave gravity untouched. Retain
		  roughly 90% energy on reflection from teh floor. Should have a
		  parabolic like path.
		[ ] Define functor when collides with object in the scene, on collison
		  with some primitive of an object notify the object.
	[ ] Object collision
		[ ] On collision with floor simply rebound at ~90% energy.
		[ ] On collision with Q, fracture triangle according to either some
		  set of predefined patterns (medium), avengers style break away,
		  simple subdivide (easy) and then each breakage is a new particle
		  stream (upwards?)

[ ] Raytracer
	[ ] Some scene description format
	[ ] Glowing effect
	[ ] Reflection
	[ ] Displacement map
	[ ] etc.
